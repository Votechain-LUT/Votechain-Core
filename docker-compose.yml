version: '2'

services:
  database:
    container_name: db
    image: mysql:8.0.22
    networks:
      - sql_network
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_DATABASE=Votechain
      - MYSQL_TCP_PORT=${DATABASE_PORT}
    ports:
      - 2866:2866

  backend:
    container_name: core-api
    networks:
      - core_votechain_network
      - sql_network
    build:
      context: ./src
      args:
        - PRIVATE_KEY=${PRIVATE_KEY}
    environment:
      - PYTHONPATH=${PYTHONPATH}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=database
      - DATABASE_PORT=${DATABASE_PORT}
      - PORT=8000
      - SMTP_SERVER=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - CORS_FRONTEND=${CORS_FRONTEND}
      - DEBUG=${DEBUG}
    ports:
      - 8000:8000
    volumes:
      - ./src/core:/usr/src/core
      - ./src/votechain:/usr/src/votechain
    depends_on:
      - database
      - orderer.example.com
      - peer0.org1.example.com

  orderer.example.com:
    extends:
      file: src/hyperledger/docker-compose.yml
      service: orderer.example.com

  peer0.org1.example.com:
    extends:
      file: src/hyperledger/docker-compose.yml
      service: peer0.org1.example.com

  peer1.org1.example.com:
    extends:
      file: src/hyperledger/docker-compose.yml
      service: peer1.org1.example.com

  peer0.org2.example.com:
    extends:
      file: src/hyperledger/docker-compose.yml
      service: peer0.org2.example.com

  peer1.org2.example.com:
    extends:
      file: src/hyperledger/docker-compose.yml
      service: peer1.org2.example.com

networks:
  core_votechain_network:
    external: true
  sql_network:
    driver: bridge
